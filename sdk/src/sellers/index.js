/*
 * The Selling Partner API for Sellers
 * The Selling Partner API for Sellers lets you retrieve information on behalf of sellers about their seller account, such as the marketplaces they participate in. Along with listing the marketplaces that a seller can sell in, the API also provides additional information about the marketplace such as the default language and the default currency. The API also provides seller-specific information such as whether the seller has suspended listings in that marketplace.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from './ApiClient.js';
import {Account} from './js-client.sellers.model/Account.js';
import {Address} from './js-client.sellers.model/Address.js';
import {Business} from './js-client.sellers.model/Business.js';
import {Error} from './js-client.sellers.model/Error.js';
import {ErrorList} from './js-client.sellers.model/ErrorList.js';
import {GetAccountResponse} from './js-client.sellers.model/GetAccountResponse.js';
import {GetMarketplaceParticipationsResponse} from './js-client.sellers.model/GetMarketplaceParticipationsResponse.js';
import {Marketplace} from './js-client.sellers.model/Marketplace.js';
import {MarketplaceParticipation} from './js-client.sellers.model/MarketplaceParticipation.js';
import {MarketplaceParticipationList} from './js-client.sellers.model/MarketplaceParticipationList.js';
import {Participation} from './js-client.sellers.model/Participation.js';
import {PrimaryContact} from './js-client.sellers.model/PrimaryContact.js';
import {SellersApi} from './js-client.sellers.api/SellersApi.js';


/**
* The_Selling_Partner_API_for_Sellers_lets_you_retrieve_information_on_behalf_of_sellers_about_their_seller_account_such_as_the_marketplaces_they_participate_in__Along_with_listing_the_marketplaces_that_a_seller_can_sell_in_the_API_also_provides_additional_information_about_the_marketplace_such_as_the_default_language_and_the_default_currency__The_API_also_provides_seller_specific_information_such_as_whether_the_seller_has_suspended_listings_in_that_marketplace_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TheSellingPartnerApiForSellers = require('sellers/index'); // See note below*.
* var xxxSvc = new TheSellingPartnerApiForSellers.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TheSellingPartnerApiForSellers.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['sellers/index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TheSellingPartnerApiForSellers.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TheSellingPartnerApiForSellers.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module sellers/index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:sellers/ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:sellers/js-client.sellers.model/Account}
     */
    Account,

    /**
     * The Address model constructor.
     * @property {module:sellers/js-client.sellers.model/Address}
     */
    Address,

    /**
     * The Business model constructor.
     * @property {module:sellers/js-client.sellers.model/Business}
     */
    Business,

    /**
     * The Error model constructor.
     * @property {module:sellers/js-client.sellers.model/Error}
     */
    Error,

    /**
     * The ErrorList model constructor.
     * @property {module:sellers/js-client.sellers.model/ErrorList}
     */
    ErrorList,

    /**
     * The GetAccountResponse model constructor.
     * @property {module:sellers/js-client.sellers.model/GetAccountResponse}
     */
    GetAccountResponse,

    /**
     * The GetMarketplaceParticipationsResponse model constructor.
     * @property {module:sellers/js-client.sellers.model/GetMarketplaceParticipationsResponse}
     */
    GetMarketplaceParticipationsResponse,

    /**
     * The Marketplace model constructor.
     * @property {module:sellers/js-client.sellers.model/Marketplace}
     */
    Marketplace,

    /**
     * The MarketplaceParticipation model constructor.
     * @property {module:sellers/js-client.sellers.model/MarketplaceParticipation}
     */
    MarketplaceParticipation,

    /**
     * The MarketplaceParticipationList model constructor.
     * @property {module:sellers/js-client.sellers.model/MarketplaceParticipationList}
     */
    MarketplaceParticipationList,

    /**
     * The Participation model constructor.
     * @property {module:sellers/js-client.sellers.model/Participation}
     */
    Participation,

    /**
     * The PrimaryContact model constructor.
     * @property {module:sellers/js-client.sellers.model/PrimaryContact}
     */
    PrimaryContact,

    /**
    * The SellersApi service constructor.
    * @property {module:sellers/js-client.sellers.api/SellersApi}
    */
    SellersApi
};
