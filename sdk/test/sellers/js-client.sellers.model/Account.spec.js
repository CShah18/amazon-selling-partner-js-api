/*
 * The Selling Partner API for Sellers
 * The Selling Partner API for Sellers lets you retrieve information on behalf of sellers about their seller account, such as the marketplaces they participate in. Along with listing the marketplaces that a seller can sell in, the API also provides additional information about the marketplace such as the default language and the default currency. The API also provides seller-specific information such as whether the seller has suspended listings in that marketplace.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/sellers/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/sellers/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForSellers);
  }
}(this, function(expect, TheSellingPartnerApiForSellers) {
  'use strict';

  var instance;

  describe('sellers', function() {
    describe('Account', function() {
      beforeEach(function() {
        instance = new TheSellingPartnerApiForSellers.Account();
      });

      it('should create an instance of Account', function() {
        // TODO: update the code to test Account
        expect(instance).to.be.a(TheSellingPartnerApiForSellers.Account);
      });

      it('should have the property marketplaceParticipationList (base name: "marketplaceParticipationList")', function() {
        // TODO: update the code to test the property marketplaceParticipationList
        expect(instance).to.have.property('marketplaceParticipationList');
        // expect(instance.marketplaceParticipationList).to.be(expectedValueLiteral);
      });

      it('should have the property businessType (base name: "businessType")', function() {
        // TODO: update the code to test the property businessType
        expect(instance).to.have.property('businessType');
        // expect(instance.businessType).to.be(expectedValueLiteral);
      });

      it('should have the property sellingPlan (base name: "sellingPlan")', function() {
        // TODO: update the code to test the property sellingPlan
        expect(instance).to.have.property('sellingPlan');
        // expect(instance.sellingPlan).to.be(expectedValueLiteral);
      });

      it('should have the property business (base name: "business")', function() {
        // TODO: update the code to test the property business
        expect(instance).to.have.property('business');
        // expect(instance.business).to.be(expectedValueLiteral);
      });

      it('should have the property primaryContact (base name: "primaryContact")', function() {
        // TODO: update the code to test the property primaryContact
        expect(instance).to.have.property('primaryContact');
        // expect(instance.primaryContact).to.be(expectedValueLiteral);
      });

    });
  });

}));
